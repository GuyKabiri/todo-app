{"version":3,"sources":["services/firebase.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/TodoItem.js","components/TodoList.js","components/layout/Sidebar.js","components/layout/DashBoard.js","components/LogIn.js","components/SignUp.js","components/LogInSignUp.js","components/AddTodoItem.js","App.js","serviceWorker.js","index.js"],"names":["createUserProfileDocument","userAuth","additionalData","a","userRef","firestore","doc","uid","get","exists","email","createdAt","Date","set","console","log","message","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","appId","auth","SignedInLinks","props","currentUser","Grid","container","direction","justify","alignItems","item","Button","onClick","signOut","className","IconButton","to","component","RouterLink","Avatar","color","Typography","firstName","lastName","SignedOutLinks","startIcon","Fingerprint","Link","underline","Navbar","AppBar","position","Toolbar","xs","edge","aria-label","variant","noWrap","TodoItem","id","title","text","checked","onToggle","toggle","deleteAction","useState","show","setShow","React","expanded","setExpanded","printedDate","toDate","toLocaleDateString","weekday","year","month","day","hour","minute","hour12","Grow","in","Card","CardHeader","action","Checkbox","name","onChange","CardContent","length","Collapse","timeout","unmountOnExit","CardActions","toString","e","handleDelete","aria-expanded","TodoList","items","renderColuomn","startIndex","factor","arr","i","push","map","key","toggleChecked","spacing","Sidebar","handleSearch","reload","Paper","elevation","List","ListItem","TextField","label","value","fullWidth","margin","type","InputProps","startAdornment","InputAdornment","Search","button","RouteLink","ListItemIcon","CreateNewFolder","ListItemText","primary","DashBoard","thisId","target","newItem","state","find","setState","prevState","collection","update","delete","then","filter","reloadItems","where","snapshot","forEach","data","sort","b","sortByChecked","search","filterItems","includes","bind","this","sm","CircularProgress","Component","LogIn","handleChange","handleSubmit","preventDefault","password","err","signInWithEmailAndPassword","onSubmit","SignUp","signup_email","signup_password","confirmPassword","createUserWithEmailAndPassword","user","LogInSignUp","AddTodoItem","add","history","match","params","docRef","multiline","rows","endIcon","App","unsubscribeFromAuth","onAuthStateChanged","onSnapshot","exact","path","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.3f3d7ee7.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAWOEjr1sJbPWtfQ2wXUsgJI6ljLnE7A5o\",\r\n  authDomain: \"todo-app-132ab.firebaseapp.com\",\r\n  databaseURL: \"https://todo-app-132ab.firebaseio.com\",\r\n  projectId: \"todo-app-132ab\",\r\n  // storageBucket: \"todo-app-132ab.appspot.com\",\r\n  // messagingSenderId: \"446221338901\",\r\n  appId: \"1:446221338901:web:201b323954bb867db2c11c\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      })\r\n    }\r\n    catch (err) {\r\n      console.log('Error creating user ', err.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n\r\n  export const logOutFunc = async (e) => {\r\n    await auth.signOut();\r\n    return true;\r\n  };\r\n\r\n  // export const logInFunc = async (userInfo) => {\r\n  //     const { email, password } = userInfo;\r\n  //     try {\r\n  //         const { user } = await auth.signInWithEmailAndPassword(email, password);\r\n  //         if (user) {\r\n  //           const snapshot = await firestore.collection('users').doc(user.uid).get();\r\n  //           //  TODO: change path\r\n  //           auth.updateCurrentUser(user);\r\n  //         }\r\n  //         return user;\r\n  //     } catch(err) {\r\n  //         return err;\r\n  //     }\r\n  // };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  export default firebase;","import React from 'react'\r\nimport { Button, Grid, IconButton, Typography } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport { auth } from '../../services/firebase'\r\n\r\nconst SignedInLinks = (props) => {\r\n    const { currentUser } = props;\r\n\r\n    const signOut = () => {\r\n        auth.signOut();\r\n    }\r\n\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n            <Grid item>\r\n                <Button onClick={ () => signOut() } className='link-with-icon'>\r\n                    Log Out\r\n                </Button>\r\n            </Grid>\r\n            <Grid item>\r\n                <IconButton to='/' component={RouterLink}>\r\n                    <Avatar color='secondary'>\r\n                        <Typography>\r\n                        { currentUser.firstName[0] + currentUser.lastName[0] }\r\n                        </Typography>\r\n                    </Avatar>\r\n                </IconButton>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SignedInLinks\r\n","import React from 'react'\r\nimport '../../styles/SignedLinksStyles.css'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { Fingerprint } from '@material-ui/icons';\r\nimport { Button, Link } from '@material-ui/core';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <div>\r\n            <Button startIcon={<Fingerprint className='link-with-icon' />}>\r\n                <Link to='/auth' className='link-with-icon' component={RouterLink} underline='none'>\r\n                    Log In / Sign Up\r\n                </Link>\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks\r\n","import React from 'react'\r\nimport '../../styles/NavbarStyles.css'\r\nimport SignedInLinkes from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { AppBar, IconButton, Toolbar, Typography, Grid } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst Navbar = (props) => {\r\n    const { currentUser } = props;\r\n\r\n    return ( \r\n\r\n    <AppBar position='sticky'>\r\n        <Toolbar>\r\n        <Grid container direction='row' justify='space-between' alignItems='center'>\r\n            <Grid item xs={4}>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n                    <Grid item>\r\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            Todo\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n            { props.currentUser ? \r\n                (<SignedInLinkes currentUser={currentUser} />)   :\r\n                (<SignedOutLinks />) }\r\n            </Grid>\r\n        </Grid>\r\n        </Toolbar>\r\n    </AppBar>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, {useState} from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Card, CardActions, CardContent, CardHeader, Checkbox, Collapse, Grid, Grow, IconButton, Typography } from '@material-ui/core';\r\nimport '../styles/TodoItemStyles.css'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nconst TodoItem = (props) => {\r\n    const {id, title, text, checked, createdAt} = props.item;\r\n    const onToggle = props.toggle\r\n    const deleteAction = props.deleteAction\r\n    const [show, setShow] = useState(true)\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n\r\n    const options = { \r\n        weekday: 'short', \r\n        year: 'numeric', \r\n        month: 'short', \r\n        day: 'numeric', \r\n        hour:'numeric', \r\n        minute:'numeric',\r\n        hour12: false, };\r\n\r\n    const printedDate = createdAt.toDate().toLocaleDateString('il-HE', options);\r\n\r\n    const handleDelete = (id) => {\r\n        setShow(false);\r\n        deleteAction(id);\r\n    }\r\n\r\n    return (\r\n    <Grow in={show}>\r\n    <Card className='card'>\r\n        <CardHeader\r\n            action={\r\n                <Checkbox\r\n                    name={id}\r\n                    checked={checked}\r\n                    onChange={onToggle}\r\n                    color='primary'\r\n              />\r\n            }\r\n            title={ \r\n                <Typography variant='h6' className={`${ checked ? 'checked' : null } title`}>\r\n                    { title }\r\n                </Typography> }\r\n        />\r\n        \r\n        <CardContent className='card-content'>\r\n          <Typography variant=\"body1\" className={`${ checked ? 'checked' : null } text`}>\r\n            { text }            \r\n          </Typography>\r\n        </CardContent>\r\n\r\n        { text.length > 280 && (\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n                <Typography>\r\n                    { text }\r\n                </Typography>\r\n            </CardContent>\r\n        </Collapse>\r\n        )}\r\n\r\n\r\n        <CardActions>\r\n            <Grid container direction='row' justify='space-between' alignItems='center' className='action-section'>\r\n                <Grid item>\r\n                    <Typography variant='caption' className='date'>\r\n                    { printedDate.toString() }\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <IconButton component={RouterLink} to={`/add/${id}`}>\r\n                        <EditIcon />\r\n                    </IconButton>\r\n                    <IconButton component={RouterLink} to='/' onClick={(e) => handleDelete(id)}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                    { text.length > 280 && (\r\n                    <IconButton\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={expanded}\r\n                        aria-label=\"show more\"\r\n                        >\r\n                        <ExpandMoreIcon />\r\n                    </IconButton>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </CardActions>\r\n    </Card>\r\n    </Grow>\r\n    )\r\n}\r\n\r\nexport default TodoItem\r\n","import React from 'react'\r\nimport '../styles/TodoListStyles.css'\r\nimport TodoItem from './TodoItem'\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nconst TodoList = (props) => {\r\n\r\n    const { items } = props;\r\n\r\n    const renderColuomn = (startIndex, factor) => {\r\n        let arr = []\r\n        for (let i = startIndex; i < items.length; i += factor) {\r\n            arr.push(items[i]);\r\n        }\r\n        return arr.map( (item) => (\r\n            <Grid item key={item.id} className='item'>\r\n                <TodoItem item={item} toggle={props.toggleChecked} deleteAction={props.deleteAction} />\r\n            </Grid>\r\n        ))\r\n    }\r\n\r\n    return ( items && items.length > 0 ? (\r\n        <Grid container spacing={2} direction='row' justify='center' alignItems='flex-start'>\r\n            <Grid container item xs={4} spacing={2} direction='column' justify='flex-start' alignItems='center'>\r\n                {    \r\n                        renderColuomn(0, 3) \r\n                }\r\n            </Grid>\r\n            <Grid container item xs={4} spacing={2} direction='column' justify='flex-start' alignItems='center'>\r\n                {    \r\n                        renderColuomn(1, 3) \r\n                }\r\n            </Grid>\r\n            <Grid container item xs={4} spacing={2} direction='column' justify='flex-start' alignItems='center'>\r\n                {    \r\n                        renderColuomn(2, 3) \r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    )   :   (\r\n        <Grid container direction='row' justify='center' alignItems='center' className='fullheight'>\r\n            <Grid item>\r\n                <Typography variant='h6'>\r\n                    No items to show.\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    ))\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react'\r\nimport '../../styles/SignedLinksStyles.css'\r\nimport { Link as RouteLink } from 'react-router-dom'\r\nimport { IconButton, InputAdornment, List, ListItem, ListItemIcon, ListItemText, Paper, TextField } from '@material-ui/core'\r\nimport { CreateNewFolder } from '@material-ui/icons';\r\nimport { Search } from '@material-ui/icons';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\n\r\nconst Sidebar = ({ handleSearch, reload }) => {\r\n    return (\r\n    <Paper elevation={3}>\r\n        <List className='fullwidth'>\r\n            <ListItem>\r\n                <TextField\r\n                    id='search'\r\n                    label='Search'\r\n                    value=''\r\n                    onChange={handleSearch} \r\n                    fullWidth\r\n                    margin='dense'\r\n                    type='text'\r\n                    variant='outlined'\r\n                    InputProps={{\r\n                    startAdornment: (\r\n                        <InputAdornment position='start'>\r\n                            <Search />\r\n                        </InputAdornment>\r\n                    ),\r\n                    }}\r\n                />\r\n                <IconButton onClick={reload}>\r\n                    <ReplayIcon />\r\n                </IconButton>\r\n            </ListItem>\r\n            <ListItem button component={RouteLink} to='/add'>\r\n                <ListItemIcon>\r\n                    <CreateNewFolder />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Add Item\" />\r\n            </ListItem>\r\n        </List>\r\n    </Paper>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport { firestore } from '../../services/firebase'\r\nimport { CircularProgress, Grid } from '@material-ui/core';\r\nimport TodoList from '../TodoList';\r\nimport Sidebar from './Sidebar';\r\nimport '../../styles/DashBoardStyles.css'\r\n\r\nclass DashBoard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...props,\r\n            items: null,\r\n            search: '',\r\n        }\r\n\r\n        this.toggleChecked.bind(this);\r\n        this.deleteAction.bind(this);\r\n        this.handleSearch.bind(this);\r\n        this.filterItems.bind(this);\r\n        this.sortByChecked.bind(this);\r\n        this.reloadItems.bind(this);\r\n    }\r\n\r\n    toggleChecked = (e) => {\r\n        let thisId = e.target.name;\r\n        let newItem = this.state.items.find( (item) => item.id === thisId);\r\n        newItem.checked = !newItem.checked;\r\n        this.setState( (prevState) => ({\r\n            items: [...prevState.items.map( (item) => item.id === thisId ? newItem : item)]\r\n        }))\r\n\r\n        try {\r\n            firestore.collection('todos').doc(thisId).update({\r\n                checked: newItem.checked,\r\n            })\r\n        }\r\n        catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    deleteAction = (id) => {\r\n        try {\r\n            firestore.collection('todos').doc(id).delete()\r\n            .then( () =>  this.setState((prevState) => ({\r\n                    items: [...prevState.items.filter( (item) => item.id !== id)]\r\n                }))\r\n            )\r\n        }\r\n        catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reloadItems();\r\n    }\r\n\r\n    reloadItems = () => {\r\n        if (this.state.currentUser) {\r\n            firestore.collection('todos')\r\n            .where('uid', '==', this.state.currentUser.id).get()\r\n            .then( (snapshot) => {\r\n                var arr = []\r\n                snapshot.forEach( doc => {\r\n                    arr.push({ id: doc.id,\r\n                                ...doc.data() });\r\n                });\r\n                arr.sort( (a, b) => b.createdAt.toDate() - a.createdAt.toDate());\r\n                this.setState({\r\n                    items: [...this.sortByChecked(arr)],\r\n                })\r\n            })\r\n        }\r\n    }\r\n    \r\n    handleSearch = (e) => {\r\n        this.setState({ search: e.target.value });\r\n    }\r\n\r\n    sortByChecked = (items) => {\r\n        return [...items.filter( (item) => !item.checked ), ...items.filter( (item) => item.checked )]\r\n    }\r\n\r\n    filterItems = (text) => {\r\n        return this.state.items.filter( (item) => item.title.includes(text) || item.text.includes(text) )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container spacing={0}>\r\n                <Grid item sm={3}>\r\n                    <Sidebar currentUser={this.props.currentUser} handleSearch={this.handleSearch} reload={this.reloadItems} />\r\n                </Grid>\r\n                <Grid item sm={9}>\r\n                    { this.state.items ? (\r\n                        <TodoList items={this.filterItems(this.state.search)} deleteAction={this.deleteAction} toggleChecked={this.toggleChecked} />\r\n                    ) : (\r\n                        <Grid container direction='row' justify='center' alignItems='center' className='fullheight'>\r\n                            <Grid item>\r\n                                <CircularProgress />\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default DashBoard;","import React, { Component } from 'react'\r\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { auth } from '../services/firebase'\r\nimport '../styles/LogInStyles.css'\r\n\r\nexport default class LogIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            err: '',\r\n        }\r\n\r\n        this.handleChange.bind(this.handleChange);\r\n        this.handleSubmit.bind(this.handleSubmit);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n            err: '',\r\n        })\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const {email, password} = this.state;\r\n        if (!email || !password) {\r\n            this.setState({\r\n                err: 'All fields required!'\r\n            });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email,password);\r\n\r\n        } catch ({ message }) {\r\n            this.setState({ err: message })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <Grid container className='login-form'>\r\n            <Grid item xs={12}>\r\n            <form className='white' onSubmit={this.handleSubmit}>\r\n                <Typography variant='h5'>\r\n                    Log In\r\n                </Typography>\r\n                <TextField id='email'\r\n                            label=\"Email\"\r\n                            value={this.state.email} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                            margin='dense'\r\n                            type='email'\r\n                             />\r\n\r\n                <TextField id='password'\r\n                            label=\"Password\"\r\n                            value={this.state.password} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                            margin='dense'\r\n                            type='password'\r\n                             />\r\n\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={3}>\r\n                    <Grid item>\r\n                        <Button variant='outlined' onClick={this.handleSubmit}>Log In</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"caption\" color=\"error\">\r\n                            { this.state.err }\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            </Grid>\r\n        </Grid>\r\n        )\r\n    }\r\n}\r\n","import { Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport React, { Component } from 'react'\r\nimport { auth, createUserProfileDocument } from '../services/firebase'\r\nimport '../styles/SignUpStyles.css'\r\n\r\nexport default class SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            signup_email: '',\r\n            signup_password: '',\r\n            confirmPassword: '',\r\n            firstName:'',\r\n            lastName:'',\r\n            err:'',\r\n        }\r\n\r\n        this.handleChange.bind(this.handleChange);\r\n        this.handleSubmit.bind(this.handleSubmit);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n            err: '',\r\n        })\r\n    }    \r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const { signup_email, signup_password, confirmPassword, firstName, lastName } = this.state;\r\n        if (signup_password !== confirmPassword) {\r\n            this.setState({\r\n                err: 'Passwords are not match!',\r\n            })\r\n            return;\r\n        }\r\n        else if (!signup_email || !signup_password || !confirmPassword || !firstName || !lastName) {\r\n            this.setState({\r\n                err: 'All fields required!',\r\n            })\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(signup_email, signup_password);\r\n            await createUserProfileDocument(user, { firstName, lastName });\r\n                        \r\n        } catch({ message }) {\r\n            this.setState({ err: message })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container className='signup-form'>\r\n            <Grid item xs={12}>\r\n            <form className='white' onSubmit={this.handleSubmit}>\r\n                <Typography variant='h5'>\r\n                    Sign Up\r\n                </Typography>\r\n                <TextField id='signup_email'\r\n                            label=\"Email\"\r\n                            value={this.state.signup_email} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                            margin='dense'\r\n                            type='email'\r\n                             />\r\n                    \r\n                <TextField id='signup_password'\r\n                            label=\"Password\"\r\n                            value={this.state.signup_password} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                            margin='dense'\r\n                            type='password'\r\n                             />\r\n                \r\n                <TextField id='confirmPassword'\r\n                            label=\"Confirm Password\"\r\n                            value={this.state.confirmPassword} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                            margin='dense'\r\n                            type='password'\r\n                             />\r\n\r\n                <Grid container spacing={1}>\r\n                    <Grid item sm>\r\n                        <TextField id='firstName'\r\n                                    label=\"First Name\"\r\n                                    value={this.state.firstName} \r\n                                    onChange={this.handleChange} \r\n                                    fullWidth\r\n                                    margin='dense'\r\n                                    type='text'\r\n                                    />\r\n                    </Grid>\r\n\r\n                    <Grid item sm>\r\n                        <TextField id='lastName'\r\n                                    label=\"Last Name\"\r\n                                    value={this.state.lastName} \r\n                                    onChange={this.handleChange} \r\n                                    fullWidth\r\n                                    margin='dense'\r\n                                    type='text'\r\n                                    />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={3}>\r\n                    <Grid item>\r\n                        <Button variant='outlined' onClick={this.handleSubmit}>Sign Up</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"caption\" color=\"error\">\r\n                            { this.state.err }\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            </Grid>\r\n        </Grid>              \r\n        )\r\n    }\r\n}\r\n","import { Grid } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport LogIn from './LogIn'\r\nimport SignUp from './SignUp'\r\n\r\nexport default function LogInSignUp(props) {\r\n    return (    props.currentUser ? (\r\n        <Redirect to='/' />\r\n        ) : (\r\n        <Grid container direction='row' justify='space-around' alignItems='flex-start' spacing={1}>\r\n            <Grid item xs={5}>\r\n                <LogIn />\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n                <SignUp />\r\n            </Grid>\r\n        </Grid>\r\n        )\r\n    )\r\n}\r\n","import { Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport React, { Component } from 'react'\r\nimport { firestore } from '../services/firebase';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nexport default class AddTodoItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            title: '',\r\n            text: '',\r\n            err: '',\r\n            currentUser: props.currentUser,\r\n            history: this.props.history,\r\n        }\r\n\r\n        this.handleSubmit.bind(this);\r\n        this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.id) {\r\n            firestore.collection('todos').doc(this.state.id).get()\r\n            .then(docRef => {\r\n                if (docRef.exists) {\r\n                    const data = docRef.data();\r\n                    this.setState({\r\n                        ...data,\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        id: '',\r\n                        title: '',\r\n                        text: '',\r\n                        err: '',\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { id, value } = e.target;\r\n        this.setState({ [id]: value });\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { title, text } = this.state;\r\n        const createdAt = new Date();\r\n\r\n        if (!title) {\r\n            this.setState({ err: \"Title is empty\" });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (this.state.id) {\r\n                await firestore.collection('todos').doc(this.state.id).update({\r\n                    title,\r\n                    text,\r\n                    checked: false,\r\n                    createdAt,\r\n                    uid: this.state.currentUser.id,\r\n                })\r\n                this.setState({ err: 'updated' })\r\n            }\r\n            else {\r\n                await firestore.collection('todos').add({\r\n                    title,\r\n                    text,\r\n                    checked: false,\r\n                    createdAt,\r\n                    uid: this.state.currentUser.id,\r\n                })\r\n                this.setState({\r\n                    title: '',\r\n                    text: '',\r\n                    err: '',\r\n                })\r\n            }\r\n            this.state.history.push('/')\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <Grid container justify='center' className='create-item-form'>\r\n            <Grid item xs={9}>\r\n            <form className='white' onSubmit={this.handleSubmit}>\r\n                <Typography variant='h5'>\r\n                    Add Todo\r\n                </Typography>\r\n                <TextField id='title'\r\n                            label=\"Title\"\r\n                            value={this.state.title} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                            margin='dense'\r\n                            type='text'\r\n                             />\r\n\r\n                <TextField id='text'\r\n                            label=\"Text\"\r\n                            value={this.state.text} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                            margin='dense'\r\n                            type='text'\r\n                            multiline\r\n                            rows={10}\r\n                            variant='outlined'\r\n                             />\r\n\r\n                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                    <Grid item>\r\n                        { this.state.id ? (\r\n                            <Button\r\n                                variant='outlined'\r\n                                onClick={this.handleSubmit}\r\n                                endIcon={<SaveIcon />}\r\n                                >\r\n                                    Save\r\n                            </Button>\r\n                        ) : (\r\n                            <Button \r\n                                variant='outlined'\r\n                                onClick={this.handleSubmit}\r\n                                endIcon={<SendIcon />}\r\n                                >\r\n                                    Add\r\n                            </Button>\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"caption\" color=\"error\">\r\n                            { this.state.err }\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            </Grid>\r\n        </Grid>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css'\r\nimport { auth, createUserProfileDocument } from './services/firebase'\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport DashBoard from './components/layout/DashBoard';\r\nimport LogInSignUp from './components/LogInSignUp';\r\nimport AddTodoItem from './components/AddTodoItem';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentUser: null,\r\n    }\r\n  }\r\n\r\n  unsubscribeFromAuth = null;\r\n\r\n  componentDidMount() {\r\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\r\n      if (userAuth) {\r\n        const userRef = await createUserProfileDocument(userAuth);\r\n        userRef.onSnapshot(snapshot => {\r\n          this.setState({\r\n            currentUser: {\r\n              id: snapshot.id,\r\n              ...snapshot.data(),\r\n            }\r\n          })\r\n        })\r\n      }\r\n      else {\r\n        this.setState({ currentUser: userAuth });\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribeFromAuth();\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <BrowserRouter>\r\n        <Navbar currentUser={this.state.currentUser} />\r\n        <Grid container direction='row' justify='space-between' alignItems='flex-start' className='bottom-section'>\r\n          <Grid item xs={12}>\r\n \r\n            <Switch>\r\n              <Route exact path='/' render={(props) => (\r\n                <DashBoard {...props} currentUser={this.state.currentUser} />\r\n              )} />\r\n              <Route path='/add/:id?' render={(props) => (\r\n                <AddTodoItem {...props} currentUser={this.state.currentUser} />\r\n              )} />\r\n              <Route path='/auth' render={(props) => (\r\n                <LogInSignUp {...props} currentUser={this.state.currentUser} />\r\n              )} />\r\n            </Switch>\r\n\r\n            { this.state.currentUser ? null :\r\n              <Redirect to='/auth' /> \r\n            }\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}